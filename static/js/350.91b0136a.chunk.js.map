{"version":3,"file":"static/js/350.91b0136a.chunk.js","mappings":"+SAEMA,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAU,mCAAG,oGACFD,EAAAA,EAAAA,IAAA,qCAAwCD,IADtC,cACnBG,EADmB,yBAElBA,EAASC,MAFS,2CAAH,qDAKVC,EAAY,mCAAG,WAAOC,GAAP,uFACJL,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,iCAA8DM,EAA9D,gCADI,cACrBH,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKXG,EAAe,mCAAG,WAAOC,GAAP,uFACRP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,oBAAiCR,EAAjC,oBADQ,cACzBG,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKfK,EAAe,mCAAG,WAAOD,GAAP,uFACRP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,4BAAyCR,EAAzC,oBADQ,cACzBG,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKfM,EAAU,mCAAG,WAAOF,GAAP,uFACHP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,4BAAyCR,EAAzC,2BADG,cACpBG,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,qD,yLCvBXO,EAAY,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAE1BC,EAMID,EANJC,cACAC,EAKIF,EALJE,eACAC,EAIIH,EAJJG,aACAC,EAGIJ,EAHJI,SACAC,EAEIL,EAFJK,OACAC,EACIN,EADJM,aAEKC,EAAUC,KAAKC,MAAqB,GAAfN,GAE1B,OACA,+BACC,4BAEC,gBACMO,IACET,EAAa,0DAC0CA,GAD1C,+CAIfU,MAAO,IACPC,OAAQ,IACRC,QAAQ,OACRC,IAAI,YAEV,4BACC,0BAAKZ,EAAL,KAAuBI,EAAvB,QACA,wCAAgBC,EAAhB,QACA,sCACA,uBAAIH,KACJ,oCACA,wBAEEC,GAAUA,EAAOU,QAAUV,EAAOW,KAAI,gBAAGpB,EAAH,EAAGA,GAAIqB,EAAP,EAAOA,KAAP,OAAkB,wBAAcA,GAALrB,EAA3B,aAiB5C,EC/CYsB,EAAe,WAAO,IAAD,IACjC,GAAsCC,EAAAA,EAAAA,UAAS,CAAC,GAAhD,eAAOnB,EAAP,KAAoBoB,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAgCH,EAAAA,EAAAA,WAAS,GAAzC,eAAOI,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACAE,GAAYC,EAAAA,EAAAA,QAAM,oBAACP,EAASQ,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAA3CH,QAmBR,OAfAI,EAAAA,EAAAA,YAAU,WACT,IAAMC,EAAY,mCAAG,WAAOpC,GAAP,uFAEnB4B,GAAW,GAFQ,UAGE7B,EAAAA,EAAAA,IAAgBC,GAHlB,OAGbqC,EAHa,OAInBb,EAAea,GAJI,gDAMnBC,QAAQC,IAAI,SANO,yDAAH,sDASlBH,EAAaP,EACb,GAAE,CAACA,KAKH,iCACC,SAAC,KAAD,CAASW,GAAIT,EAAb,0BACA,SAAC5B,EAAD,CAAWC,YAAaA,EAAauB,UAAWA,KAChD,4BACS,oDACA,2BACE,yBACE,SAAC,KAAD,CAASa,GAAG,OAAZ,qBAEF,yBACE,SAAC,KAAD,CAASA,GAAG,UAAZ,8BAIb,SAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,UACC,SAAC,KAAD,QAIH,EACD,G","sources":["api/Api.jsx","components/MovieItem/MovieItem.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '7118a78180f97ae5603b01b858fdf311';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrading = async () => {\n\tconst response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n\treturn response.data;\n};\n\nexport const searchMovies = async (query) => {\n\tconst response = await axios.get(`search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n\treturn response.data;\n };\n\n export const getMovieDetails = async (id) => {\n\tconst response = await axios.get(`movie/${id}?api_key=${KEY}&language=en-US`);\n\treturn response.data;\n };\n\n export const getMovieCredits = async (id) => {\n\tconst response = await axios.get(`movie/${id}/credits?api_key=${KEY}&language=en-US`);\n\treturn response.data;\n };\n \n export const getReviews = async (id) => {\n\tconst response = await axios.get(`movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`);\n\treturn response.data;\n };","// import { Link } from 'react-router-dom';\n\n\nexport const MovieItem = ({ movieDetail }) => {\n\tconst {\n\t\tbackdrop_path,\n\t\toriginal_title,\n\t\tvote_average,\n\t\toverview,\n\t\tgenres,\n\t\trelease_date,\n\t } = movieDetail;\n\tconst percent = Math.round(vote_average * 10);\n\n\t return(\n\t\t<>\n\t\t\t<div>\n\t\t\t\t{/* <img src={`https://image.tmdb.org/t/p/w600_and_h900_bestv2/${backdrop_path}`}  width={320} height={380} alt=\"poster\" /> */}\n\t\t\t\t<img\n          src={\n            backdrop_path\n              ? `https://image.tmdb.org/t/p/w600_and_h900_bestv2/${backdrop_path}`\n              : `http://www.suryalaya.org/images/no_image.jpg`\n          }\n          width={320}\n          height={380}\n          loading=\"lazy\"\n          alt=\"poster\"\n        />\n\t\t\t\t<div>\n\t\t\t\t\t<h2>{original_title} ({release_date})</h2>\n\t\t\t\t\t<p>User Score: {percent}%</p>\n\t\t\t\t\t<h3>Overview</h3>\n\t\t\t\t\t<p>{overview}</p>\n\t\t\t\t\t<h3>Genres</h3>\n\t\t\t\t\t<ul>\n             \t\t{/* {genres.map(({ id, name }) => <li key={id}>{name}</li>)} */}\n\t\t\t\t\t\t{genres && genres.length && genres.map(({ id, name }) => <li key={id}>{name}</li>)}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t{/* <div>\n            <h3>Additional information</h3>\n            <ul>\n              <li>\n                <Link to=\"Cast\">Cast</Link>\n              </li>\n              <li>\n                <Link to=\"Reviews\">Reviews</Link>\n              </li>\n            </ul>\n          </div> */}\n\t\t\t</div>\n\t\t</>\n\t );\n}","import { useEffect, useState, useRef, Suspense } from 'react';\nimport { Outlet, NavLink, useParams, useLocation } from 'react-router-dom';\n\nimport { getMovieDetails } from '../../api/Api';\nimport { MovieItem } from '../../components/MovieItem/MovieItem';\n\n\nexport const MovieDetails = () => {\n\tconst [movieDetail, setMovieDetail] = useState({});\n\tconst location = useLocation();\n\tconst [isLoading, setLoading] = useState(false);\n\tconst { movieId } = useParams();\n\tconst { current } = useRef(location.state?.from ?? '/');\n\n\t// console.log(movieId)\n\n\tuseEffect(() => {\n\t\tconst getMovieById = async (id) => {\n\t\t\ttry {\n\t\t\t\tsetLoading(true);\n\t\t\t\tconst result = await getMovieDetails(id)\n\t\t\t\tsetMovieDetail(result);\n\t\t\t} catch {\n\t\t\t\tconsole.log('error')\n\t\t\t}\n\t\t}\n\t\tgetMovieById(movieId);\n\t}, [movieId])\n\n// console.log(movieDetail);\n\n\treturn (\n\t\t<>\n\t\t\t<NavLink to={current}>Return back</NavLink>\n\t\t\t<MovieItem movieDetail={movieDetail} isLoading={isLoading} />\n\t\t\t<div>\n            <h3>Additional information</h3>\n            <ul>\n              <li>\n                <NavLink to=\"cast\">Cast</NavLink>\n              </li>\n              <li>\n                <NavLink to=\"reviews\">Reviews</NavLink>\n              </li>\n            </ul>\n          </div>\n\t\t\t<Suspense fallback={<div>Loading...</div>}>\n\t\t\t\t<Outlet />\n\t\t\t</Suspense>\n\t\t</>\n\t)\n}\nexport default MovieDetails;\n\n\n\n\n// getMovieDetails"],"names":["KEY","axios","getTrading","response","data","searchMovies","query","getMovieDetails","id","getMovieCredits","getReviews","MovieItem","movieDetail","backdrop_path","original_title","vote_average","overview","genres","release_date","percent","Math","round","src","width","height","loading","alt","length","map","name","MovieDetails","useState","setMovieDetail","location","useLocation","isLoading","setLoading","movieId","useParams","current","useRef","state","from","useEffect","getMovieById","result","console","log","to","Suspense","fallback"],"sourceRoot":""}