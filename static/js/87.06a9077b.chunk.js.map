{"version":3,"file":"static/js/87.06a9077b.chunk.js","mappings":"8SAEMA,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAU,mCAAG,oGACFD,EAAAA,EAAAA,IAAA,qCAAwCD,IADtC,cACnBG,EADmB,yBAElBA,EAASC,MAFS,2CAAH,qDAKVC,EAAY,mCAAG,WAAOC,GAAP,uFACJL,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,iCAA8DM,EAA9D,gCADI,cACrBH,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKXG,EAAe,mCAAG,WAAOC,GAAP,uFACRP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,oBAAiCR,EAAjC,oBADQ,cACzBG,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKfK,EAAe,mCAAG,WAAOD,GAAP,uFACRP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,4BAAyCR,EAAzC,oBADQ,cACzBG,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKfM,EAAU,mCAAG,WAAOF,GAAP,uFACHP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,4BAAyCR,EAAzC,2BADG,cACpBG,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,qD,6ICRXO,EAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,OACC,yBACEA,EAASC,OAAS,EACjBD,EAASE,KAAI,gBAAGN,EAAH,EAAGA,GAAIO,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACb,4BACA,gBACEC,IACAF,EACE,kCAAoCA,EACpC,kHAGFG,IAAKJ,EACLK,MAAO,OAET,4BACE,0BACA,kCADA,IACeL,MAEf,0BACA,sCADA,IACmBE,UAhBXT,EADG,IAsBb,kCAIJ,ECjBYa,EAAO,WACnB,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOV,EAAP,KAAiBW,EAAjB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRjB,EAAAA,EAAAA,IAAgBe,GAASG,MAAK,SAAAvB,GAAI,OAAImB,EAAYnB,EAAKwB,KAArB,GACnC,GAAE,CAACJ,KAMH,SAACb,EAAD,CAAUC,SAAUA,GA2BpB,EAED,G","sources":["api/Api.jsx","components/Cast/CastItem.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '7118a78180f97ae5603b01b858fdf311';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrading = async () => {\n\tconst response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n\treturn response.data;\n};\n\nexport const searchMovies = async (query) => {\n\tconst response = await axios.get(`search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n\treturn response.data;\n };\n\n export const getMovieDetails = async (id) => {\n\tconst response = await axios.get(`movie/${id}?api_key=${KEY}&language=en-US`);\n\treturn response.data;\n };\n\n export const getMovieCredits = async (id) => {\n\tconst response = await axios.get(`movie/${id}/credits?api_key=${KEY}&language=en-US`);\n\treturn response.data;\n };\n \n export const getReviews = async (id) => {\n\tconst response = await axios.get(`movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`);\n\treturn response.data;\n };","// export const CastItem = ({ credits }) => {\n// \tconst { cast } = credits;\n// \t// console.log(credits.map(item => console.log(item)))\n// \treturn(\n// \t\t<div>\n// \t\t\t{cast.map(item => {\n// \t\t\t\t\treturn (\n// \t\t\t\t\t<div key={item.id}>\n// \t\t\t\t\t\t<img src={`https://www.themoviedb.org/t/p/w138_and_h175_face/${item.profile_path}`} alt=\"poster-actor\"></img>\n// \t\t\t\t\t\t<div>{item.name}</div>\n// \t\t\t\t\t\t<div>Character: {item.character}</div>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t);\n// \t\t\t\t})}\n// \t\t</div>\n// \t)\n// }\n\nexport const CastItem = ({ castList }) => {\n\treturn(\n\t\t<div>\n\t\t {castList.length > 0\n\t\t\t? castList.map(({ id, name, profile_path, character }) => (\n\t\t\t\t <div key={id}>\n\t\t\t\t\t<img\n\t\t\t\t\t  src={\n\t\t\t\t\t\t profile_path\n\t\t\t\t\t\t\t? 'https://image.tmdb.org/t/p/w200' + profile_path\n\t\t\t\t\t\t\t: 'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg'\n\t\t\t\t\t   // `https://image.tmdb.org/t/p/w138_and_h175_face/${profile_path}`\n\t\t\t\t\t\t}\n\t\t\t\t\t  alt={name}\n\t\t\t\t\t  width={200}\n\t\t\t\t\t/>\n\t\t\t\t\t<div>\n\t\t\t\t\t  <p>\n\t\t\t\t\t\t <b>Actor:</b> {name}\n\t\t\t\t\t  </p>\n\t\t\t\t\t  <p>\n\t\t\t\t\t\t <b>Character:</b> {character}\n\t\t\t\t\t  </p>\n\t\t\t\t\t</div>\n\t\t\t\t </div>\n\t\t\t  ))\n\t\t\t: \"Sorry, there isn't any info :(\"}\n\t  </div>\n\t)\n\n}","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from '../../api/Api';\nimport { CastItem } from './CastItem';\n\n// export const Cast = () => {\n// \tconst { movieId } = useParams();\n// \tconst [credits, setCredits] = useState('');\n// \tconst [isLoading, setIsLoading] = useState(false);\n\n\n// \tuseEffect(() => {\n// \t\tconst getMoviesByCredits = async (id) => {\n// \t\t\ttry{\n// \t\t\t\tsetIsLoading(true);\n// \t\t\t\tconst result = await getMovieCredits(id);\n// \t\t\t\tsetCredits(result);\n// \t\t\t\t// setIsLoading(false);\n// \t\t\t} catch {\n// \t\t\t\tconsole.log('error')\n// \t\t\t}\n// \t\t}\n// \t\tgetMoviesByCredits(movieId);\n// \t}, [movieId])\n\n\n// \treturn (\n\t\t// <CastItem credits={credits} isLoading={isLoading}/>\n// \t)\n// }\nexport const Cast = () => {\n\tconst [castList, setCastList] = useState([]);\n\t// const [credits, setCredits] = useState('');\n\tconst { movieId } = useParams();\n\n\tuseEffect(() => {\n\t  getMovieCredits(movieId).then(data => setCastList(data.cast));\n\t}, [movieId]);\n\n\n\n\treturn (\n\n\t\t<CastItem castList={castList} />\n\t//   <div>\n\t// \t {castList.length > 0\n\t// \t\t? castList.map(({ id, name, profile_path, character }) => (\n\t// \t\t\t <div key={id}>\n\t// \t\t\t\t<img\n\t// \t\t\t\t  src={\n\t// \t\t\t\t\t profile_path\n\t// \t\t\t\t\t\t? 'https://image.tmdb.org/t/p/w200' + profile_path\n\t// \t\t\t\t\t\t: 'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg'\n\t// \t\t\t\t  }\n\t// \t\t\t\t  alt={name}\n\t// \t\t\t\t  width={200}\n\t// \t\t\t\t/>\n\t// \t\t\t\t<div>\n\t// \t\t\t\t  <p>\n\t// \t\t\t\t\t <b>Actor:</b> {name}\n\t// \t\t\t\t  </p>\n\t// \t\t\t\t  <p>\n\t// \t\t\t\t\t <b>Character:</b> {character}\n\t// \t\t\t\t  </p>\n\t// \t\t\t\t</div>\n\t// \t\t\t </div>\n\t// \t\t  ))\n\t// \t\t: \"Sorry, there isn't any info :(\"}\n\t//   </div>\n\t);\n };\n \n export default Cast;\n"],"names":["KEY","axios","getTrading","response","data","searchMovies","query","getMovieDetails","id","getMovieCredits","getReviews","CastItem","castList","length","map","name","profile_path","character","src","alt","width","Cast","useState","setCastList","movieId","useParams","useEffect","then","cast"],"sourceRoot":""}