{"version":3,"file":"static/js/199.674fb5dc.chunk.js","mappings":"+SAEMA,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAU,mCAAG,oGACFD,EAAAA,EAAAA,IAAA,qCAAwCD,IADtC,cACnBG,EADmB,yBAElBA,EAASC,MAFS,2CAAH,qDAKVC,EAAY,mCAAG,WAAOC,GAAP,uFACJL,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,iCAA8DM,EAA9D,gCADI,cACrBH,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKXG,EAAe,mCAAG,WAAOC,GAAP,uFACRP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,oBAAiCR,EAAjC,oBADQ,cACzBG,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKfK,EAAe,mCAAG,WAAOD,GAAP,uFACRP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,4BAAyCR,EAAzC,oBADQ,cACzBG,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKfM,EAAU,mCAAG,WAAOF,GAAP,uFACHP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,4BAAyCR,EAAzC,2BADG,cACpBG,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,qD,+IC1BXO,EAAa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACC,wBACKA,EAAQC,OAAS,EACdD,EAAQE,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASR,EAApB,EAAoBA,GAApB,OACV,2BACE,wBAAKO,KACL,uBAAIC,MAFGR,EADC,IAMZ,kDAGT,ECPYS,EAAU,WACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOR,EAAP,KAAgBS,EAAhB,KACA,GAAgCD,EAAAA,EAAAA,WAAS,GAAzC,eAAOE,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACT,IAAMC,EAAc,mCAAG,WAAOjB,GAAP,uFAErBe,GAAW,GAFU,UAGAb,EAAAA,EAAAA,IAAWF,GAHX,OAGfkB,EAHe,OAKrBL,EAAWK,EAAOC,SAClBJ,GAAW,GANU,gDAQrBK,QAAQC,IAAI,SARS,yDAAH,sDAWpBJ,EAAeP,EACf,GAAE,CAACA,KAIH,SAACP,EAAD,CAAYC,QAASA,EAASU,UAAWA,GAE1C,C","sources":["api/Api.jsx","components/Reviews/ReviewItem.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '7118a78180f97ae5603b01b858fdf311';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrading = async () => {\n\tconst response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n\treturn response.data;\n};\n\nexport const searchMovies = async (query) => {\n\tconst response = await axios.get(`search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n\treturn response.data;\n };\n\n export const getMovieDetails = async (id) => {\n\tconst response = await axios.get(`movie/${id}?api_key=${KEY}&language=en-US`);\n\treturn response.data;\n };\n\n export const getMovieCredits = async (id) => {\n\tconst response = await axios.get(`movie/${id}/credits?api_key=${KEY}&language=en-US`);\n\treturn response.data;\n };\n \n export const getReviews = async (id) => {\n\tconst response = await axios.get(`movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`);\n\treturn response.data;\n };","export const ReviewItem = ({ reviews }) => {\n\treturn (\n\t\t<ul>\n      {reviews.length > 0\n        ? reviews.map(({ author, content, id }) => (\n            <li key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </li>\n          ))\n        : \"Sorry, we don't have any review for this movie\"}\n    </ul>\n\t)\n}","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from '../../api/Api';\nimport { ReviewItem } from './ReviewItem';\n\nexport const Reviews = () => {\n\tconst { movieId } = useParams();\n\tconst [reviews, setReviews] = useState({});\n\tconst [isLoading, setLoading] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst getReviewsById = async (id) => {\n\t\t\ttry{\n\t\t\t\tsetLoading(true);\n\t\t\t\tconst result = await getReviews(id);\n\t\t\t\t// console.log(result.results)\n\t\t\t\tsetReviews(result.results);\n\t\t\t\tsetLoading(false);\n\t\t\t} catch {\n\t\t\t\tconsole.log('error');\n\t\t\t}\n\t\t}\n\t\tgetReviewsById(movieId);\n\t}, [movieId])\n\n\t\n\treturn (\n\t\t<ReviewItem reviews={reviews} isLoading={isLoading} />\n\t)\n}\n"],"names":["KEY","axios","getTrading","response","data","searchMovies","query","getMovieDetails","id","getMovieCredits","getReviews","ReviewItem","reviews","length","map","author","content","Reviews","movieId","useParams","useState","setReviews","isLoading","setLoading","useEffect","getReviewsById","result","results","console","log"],"sourceRoot":""}