{"version":3,"file":"static/js/853.8d0e07a1.chunk.js","mappings":"+SAEMA,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAU,mCAAG,oGACFD,EAAAA,EAAAA,IAAA,qCAAwCD,IADtC,cACnBG,EADmB,yBAElBA,EAASC,MAFS,2CAAH,qDAKVC,EAAY,mCAAG,WAAOC,GAAP,uFACJL,EAAAA,EAAAA,IAAA,+BAAkCD,EAAlC,iCAA8DM,EAA9D,gCADI,cACrBH,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKXG,EAAe,mCAAG,WAAOC,GAAP,uFACRP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,oBAAiCR,EAAjC,oBADQ,cACzBG,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKfK,EAAe,mCAAG,WAAOD,GAAP,uFACRP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,4BAAyCR,EAAzC,oBADQ,cACzBG,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKfM,EAAU,mCAAG,WAAOF,GAAP,uFACHP,EAAAA,EAAAA,IAAA,gBAAmBO,EAAnB,4BAAyCR,EAAzC,2BADG,cACpBG,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,qD,0KCexB,EAnCsB,WAAO,IAAD,EAC1B,GAAwCO,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAEjD,GAAqBC,EAAAA,EAAAA,UAAS,IAArBC,GAAT,eAaA,OACE,kBACEC,SAAU,SAAAC,GACRA,EAAMC,gBACP,EAHH,WAKE,kBACEC,YAAa,wBAEbC,UAAW,EAEXC,SAtBe,SAAAJ,GACnB,IAAMK,EAAYL,EAAMM,OAAOC,MAE/B,GADAT,EAASO,GACS,KAAdA,EACF,OAAOX,EAAgB,CAAC,GAExBA,EAAgB,CAAEP,MAAOkB,GAE5B,EAeKE,MAAOZ,KAEb,mBAAQa,KAAK,SAAb,sBAGD,E,SClCYC,EAAS,WAAM,IAAD,EACzB,GAA0BZ,EAAAA,EAAAA,UAAS,IAAnC,eAAOV,EAAP,KAAcW,EAAd,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOa,EAAP,KAAeC,EAAf,KACA,GAAgCd,EAAAA,EAAAA,WAAS,GAAzC,eAAOe,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAuBvB,EAAAA,EAAAA,MACjBG,EAAW,WADjB,eACiCC,IAAI,gBAApB,QAAgC,GA4BjD,OA1BAoB,EAAAA,EAAAA,YAAU,WAIJrB,GACFG,EAASH,GAGX,IAAMsB,EAAc,mCAAG,WAAM9B,GAAN,yFAEnB0B,GAAW,GAFQ,UAIO3B,EAAAA,EAAAA,IAAaC,GAJpB,gBAIX+B,EAJW,EAIXA,QACRP,EAAUO,GACVL,GAAW,GANQ,kDAQnBM,QAAQC,IAAR,MARmB,0DAAH,sDAWpBH,EAAe9B,EAChB,GAAE,CAACA,EAAOQ,KAOT,4BACE,oCACA,SAAC,EAAD,IACCiB,GACC,yCAEA,wBACGF,EAAOW,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKjC,IAAMmC,MAAO,CAAEC,KAAMX,GAA/C,SACGQ,EAAKI,kBAFDJ,EAAKjC,GAMjB,QAKV,EACD,G","sources":["api/Api.jsx","components/Search/Search.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '7118a78180f97ae5603b01b858fdf311';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrading = async () => {\n\tconst response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n\treturn response.data;\n};\n\nexport const searchMovies = async (query) => {\n\tconst response = await axios.get(`search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`);\n\treturn response.data;\n };\n\n export const getMovieDetails = async (id) => {\n\tconst response = await axios.get(`movie/${id}?api_key=${KEY}&language=en-US`);\n\treturn response.data;\n };\n\n export const getMovieCredits = async (id) => {\n\tconst response = await axios.get(`movie/${id}/credits?api_key=${KEY}&language=en-US`);\n\treturn response.data;\n };\n \n export const getReviews = async (id) => {\n\tconst response = await axios.get(`movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`);\n\treturn response.data;\n };","import { useState } from 'react';\n// import PropTypes from 'prop-types';\nimport { useSearchParams } from 'react-router-dom';\n// import { Form, Input } from './Search.module.jsx';\n// import { DebounceInput } from 'react-debounce-input';\n\nexport const Search = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n\n  const [, setQuery] = useState('');\n\n  const handleChange = event => {\n    const pageQuery = event.target.value;\n    setQuery(pageQuery);\n    if (pageQuery === '') {\n      return setSearchParams({});\n    } else {\n      setSearchParams({ query: pageQuery });\n    }\n  };\n  \n\n  return (\n    <form\n      onSubmit={event => {\n        event.preventDefault();\n      }}\n    >\n      <input\n        placeholder={'input search keywords'}\n      //   element={input}\n        minLength={3}\n      //   debounceTimeout={500}\n        onChange={handleChange}\n        value={searchQuery}\n      />\n\t\t<button type='submit'>search</button>\n    </form>\n  );\n}\nexport default Search","import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport Search from '../../components/Search/Search';\nimport { searchMovies } from '../../api/Api';\n\n\nexport const Movies = () =>{\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const location = useLocation();\n\n  const [searchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    // if (query === '') {\n    //   return;\n    // }\n    if (searchQuery) {\n      setQuery(searchQuery);\n    }\n\n    const getMovieByName = async query => {\n      try {\n        setLoading(true);\n\n        const { results } = await searchMovies(query);\n        setMovies(results);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMovieByName(query);\n  }, [query, searchQuery]);\n\n  // const handlerFormSubmit = search => {\n  //   setQuery(search);\n  // };\n\n  return (\n    <div>\n      <h3>Movies</h3>\n      <Search></Search>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <ul>\n          {movies.map(item => {\n            return (\n              <li key={item.id}>\n                <Link to={`/movies/${item.id}`} state={{ from: location }}>\n                  {item.original_title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n}\nexport default Movies;"],"names":["KEY","axios","getTrading","response","data","searchMovies","query","getMovieDetails","id","getMovieCredits","getReviews","useSearchParams","searchParams","setSearchParams","searchQuery","get","useState","setQuery","onSubmit","event","preventDefault","placeholder","minLength","onChange","pageQuery","target","value","type","Movies","movies","setMovies","isLoading","setLoading","location","useLocation","useEffect","getMovieByName","results","console","log","map","item","to","state","from","original_title"],"sourceRoot":""}